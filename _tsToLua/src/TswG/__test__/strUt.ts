import { describe,it,expect } from '@/UnitTest'
import * as strUt from '@/strUt'
import { equal } from '@/ts_Ut'

export function run(){

	describe('lua_utf8Sub', ()=>{
		const fn = strUt.lua_utf8sub
		it('1',()=>{
			const str = 'æŠŠâ™¡å¤§â™¡ä½¬â™¡æŠ±â™¡èµ·â™¡ä¾†â™¡è¶…â™¡ðŸ˜‹â™¡ð ‚‡â™¡aâ™¡bâ™¡câ™¡'
			//const str = '123'
			const ans = fn(str, 1, 2)
			//console.log(ans)
			expect(ans==='æŠŠâ™¡').toBe(true)
		})
	})

	describe('split', ()=>{
		const fn = strUt.split
		it('1', ()=>{
			const str = 'æŠŠâ™¡å¤§â™¡ä½¬â™¡æŠ±â™¡èµ·â™¡ä¾†â™¡è¶…â™¡ðŸ˜‹â™¡ð ‚‡â™¡aâ™¡bâ™¡câ™¡'
			const ans = fn(str, 'â™¡')
			const b = equal(ans, ["æŠŠ","å¤§","ä½¬","æŠ±","èµ·","ä¾†","è¶…","ðŸ˜‹","ð ‚‡","a","b","c",""])
			expect(b).toBe(true)
			//console.log(ans)
		})
		it('2', ()=>{
			const str = 'ä¸€äºŒä¸‰ð ‚‡abc'
			const ans = fn(str, '')
			const b = equal(ans, ['ä¸€','äºŒ','ä¸‰','ð ‚‡','a','b','c'])
			expect(b).toBe(true)
		})
	})
	


}

